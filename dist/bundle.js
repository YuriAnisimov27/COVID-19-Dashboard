/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/css/list.css":(e,t,o)=>{o.r(t)},"./src/css/style.css":(e,t,o)=>{o.r(t)},"./src/index.js":(e,t,o)=>{o.r(t);o("./src/css/style.css"),o("./src/css/list.css"),o("./src/modules/components/CountryList.component.js");console.log("hello")},"./src/modules/components/CountryList.component.js":(e,t,o)=>{o.r(t);var l=o("./src/modules/utils/helpers.js");const n={method:"GET",redirect:"follow"};window.onload=function(){fetch("https://api.covid19api.com/summary",n).then((e=>e.json())).then((e=>function(e){const t=document.querySelector(".list"),o=(0,l.default)("div","list-globalCases"),n=(0,l.default)("span","list-globalCases__title"),s=(0,l.default)("span","list-globalCases__amount"),r=(0,l.default)("div","list-countries"),i=(0,l.default)("ul","list-countries-ul");n.innerHTML="Global confirmed",s.innerHTML=e.Global.TotalDeaths,o.appendChild(n),o.appendChild(s),o.appendChild(r),r.appendChild(i),t.appendChild(o),t.appendChild(r),e.Countries.sort(((e,t)=>t.TotalConfirmed-e.TotalConfirmed)).forEach((e=>{const t=(0,l.default)("li","list-countries-ul__li"),o=(0,l.default)("div","li__nameblock"),n=(0,l.default)("div","li__infoblock"),s=(0,l.default)("span","nameblock__name"),r=e.CountryCode,a=(0,l.default)("img","nameblock__flag",["src",`https://www.countryflags.io/${r}/flat/32.png`]);s.innerHTML=`${e.Country}`,o.appendChild(s),o.appendChild(a),n.innerHTML=`Confirmed: ${e.TotalConfirmed}`,t.appendChild(o),t.appendChild(n),i.appendChild(t)}))}(e))).catch((e=>console.log("error",e)))}},"./src/modules/utils/helpers.js":(e,t,o)=>{function l(e,t,...o){let l=null;try{l=document.createElement(e)}catch(e){throw new Error("Unable to create HTML element",e)}return t&&l.classList.add(...t.split(" ")),o.length&&o.forEach((([e,t])=>{""===t?l.setAttribute(e,""):l.setAttribute(e,t)})),l}function n(e){const t=window.document.querySelector(e);t&&t.remove()}function s(e,t=null){if(!t)return JSON.parse(localStorage.getItem(e));localStorage.setItem(e,JSON.stringify(t))}o.r(t),o.d(t,{default:()=>l,removeElement:()=>n,storage:()=>s})}},t={};function o(l){if(t[l])return t[l].exports;var n=t[l]={exports:{}};return e[l](n,n.exports,o),n.exports}o.d=(e,t)=>{for(var l in t)o.o(t,l)&&!o.o(e,l)&&Object.defineProperty(e,l,{enumerable:!0,get:t[l]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o("./src/index.js")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,